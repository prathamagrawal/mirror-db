apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-node-config
  namespace: db
data:
  postgresql.conf: |
    # PostgreSQL configuration for HA data nodes
    listen_addresses = '*'
    port = 5432

    # Connection settings - adjust based on expected load
    max_connections = 200
    superuser_reserved_connections = 3

    # Memory settings - adjust based on available node resources
    shared_buffers = 256MB          # 25% of RAM (assuming 1GB RAM)
    effective_cache_size = 768MB    # 75% of RAM
    work_mem = 8MB                  # Per-connection working memory
    maintenance_work_mem = 128MB    # For maintenance operations

    # WAL (Write-Ahead Logging) settings for replication
    wal_level = replica
    wal_buffers = 16MB
    max_wal_size = 2GB
    min_wal_size = 128MB
    checkpoint_completion_target = 0.9
    checkpoint_timeout = 10min

    # Replication settings
    max_wal_senders = 10                    # Allow up to 10 replicas
    max_replication_slots = 10              # Replication slots
    hot_standby = on                        # Enable queries on standby
    hot_standby_feedback = on               # Prevent query cancellation
    wal_receiver_timeout = 60s              # Standby timeout
    wal_sender_timeout = 60s                # Sender timeout

    # Synchronous replication settings
    synchronous_standby_names = 'first 1 (sync_replica)'  # Will be managed by pg_auto_failover
    synchronous_commit = on                     # Ensure synchronous commits

    # Archive settings (configure for your backup solution)
    archive_mode = on
    archive_command = '/bin/true'           # Replace with actual archive command
    archive_timeout = 300s                  # Archive every 5 minutes

    # Performance tuning
    random_page_cost = 1.1                  # Assuming SSD storage
    effective_io_concurrency = 200          # SSD concurrent I/O capability
    default_statistics_target = 100

    # Query tuning
    enable_partitionwise_join = on
    enable_partitionwise_aggregate = on

    # Logging configuration
    log_destination = 'stderr'
    logging_collector = off
    log_min_messages = info
    log_line_prefix = '%t [%p] %u@%d from %h: '
    log_checkpoints = on
    log_connections = on
    log_disconnections = on
    log_lock_waits = on
    log_statement = 'mod'                   # Log modifications
    log_temp_files = 0                      # Log all temp files
    log_autovacuum_min_duration = 0         # Log all autovacuum activity

    # Auto vacuum settings
    autovacuum = on
    autovacuum_max_workers = 3
    autovacuum_naptime = 20s
    autovacuum_vacuum_threshold = 50
    autovacuum_analyze_threshold = 50
    autovacuum_vacuum_scale_factor = 0.1
    autovacuum_analyze_scale_factor = 0.05

    # Background writer settings
    bgwriter_delay = 200ms
    bgwriter_lru_maxpages = 100
    bgwriter_lru_multiplier = 2.0

  pg_hba.conf: |
    # TYPE  DATABASE        USER            ADDRESS                 METHOD

    # Local connections (for maintenance)
    local   all             all                                     trust
    local   replication     all                                     trust

    # IPv4 local connections
    host    all             all             127.0.0.1/32            trust
    host    replication     all             127.0.0.1/32            trust

    # IPv6 local connections
    host    all             all             ::1/128                 trust
    host    replication     all             ::1/128                 trust

    # Kubernetes cluster internal network (adjust CIDR for your cluster)
    host    all             postgres        10.0.0.0/8              trust
    host    all             appuser         10.0.0.0/8              trust
    host    all             autoctl_node    10.0.0.0/8              trust

    # Replication connections
    host    replication     replicator      10.0.0.0/8              trust
    host    replication     postgres        10.0.0.0/8              trust

    # Allow connections from anywhere in cluster (adjust as needed for security)
    host    all             postgres        0.0.0.0/0               trust
    host    all             appuser         0.0.0.0/0               trust
    host    replication     replicator      0.0.0.0/0               trust

---