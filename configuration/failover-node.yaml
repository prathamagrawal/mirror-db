apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-auto-failover-config
  namespace: db
data:
  init-node.sh: |
    #!/bin/bash
    set -e

    NODE_NAME=$(hostname)
    export MONITOR_URI="postgres://autoctl_node@postgres-monitor.db.svc.cluster.local:6001/pg_auto_failover"

    case $NODE_NAME in
      *-0)
        mkdir -p /var/lib/postgresql/pgdata
        export PGDATA=/var/lib/postgresql/pgdata/master
        export PGUSER=postgres
        export PRIORITY=50
        export NODE_ROLE="primary"
        export REPLICATION=sync
        ;;
      *-1)
        mkdir -p /var/lib/postgresql/pgdata
        export PGDATA=/var/lib/postgresql/pgdata/syncreplica
        export PRIORITY=50
        export NODE_ROLE="secondary"
        export REPLICATION=async
        ;;
      *-2)
        mkdir -p /var/lib/postgresql/pgdata
        export PGDATA=/var/lib/postgresql/pgdata/asyncreplica
        export PGUSER=postgres
        export NODE_ROLE="secondary"
        export REPLICATION=async
        ;;
      *-3)
        mkdir -p /var/lib/postgresql/pgdata
        export PGDATA=/var/lib/postgresql/pgdata/asyncreplica
        export PGUSER=postgres
        export NODE_ROLE="secondary"
        export REPLICATION=async
        ;;
      *)
        mkdir -p /var/lib/postgresql/pgdata
        export PGDATA=/var/lib/postgresql/pgdata/replica
        export PGUSER=postgres
        export NODE_ROLE="secondary"
        export REPLICATION=async
        ;;
    esac

    # Check if already initialized
    if [ -f "$PGDATA/postgresql.conf" ]; then
      echo "Node already initialized, skipping..."
      exit 0
    fi


    MY_HOSTNAME="${NODE_NAME}.postgres-nodes.db.svc.cluster.local"

    # Initialize node with enhanced settings
    pg_autoctl create postgres \
      --hostname "$MY_HOSTNAME" \
      --monitor "$MONITOR_URI" \
      --auth trust \
      --ssl-self-signed \
      --pgdata "$PGDATA" \

    # Enhanced PostgreSQL configuration
    cat >> "$PGDATA/postgresql.conf" <<EOF
    # Network settings
    listen_addresses = '*'
    port = 5432
    
    # Enhanced replication settings
    max_wal_senders = 10
    max_replication_slots = 10
    wal_keep_segments = 64
    
    # Failover tuning
    wal_level = replica
    hot_standby = on
    hot_standby_feedback = on
    
    # Performance tuning
    shared_buffers = 128MB
    effective_cache_size = 512MB
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    
    # Connection settings
    max_connections = 100
    
    # Logging for debugging
    log_destination = 'stderr'
    logging_collector = on
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_min_duration_statement = 1000
    log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
    log_connections = on
    log_disconnections = on
    
    # Auto-failover specific settings
    synchronous_standby_names = '*'
    
    EOF
    
    # Enhanced pg_hba.conf
    cat >> "$PGDATA/pg_hba.conf" <<EOF
    # Allow pg_auto_failover connections
    hostssl all pgautofailover_replicator 0.0.0.0/0 trust
    hostssl replication pgautofailover_replicator 0.0.0.0/0 trust
    hostssl all autoctl_node 0.0.0.0/0 trust
    hostssl replication autoctl_node 0.0.0.0/0 trust
    
    # Allow application connections
    hostssl all postgres 0.0.0.0/0 trust
    host all postgres 0.0.0.0/0 trust
    
    # Local connections
    local all all trust
    host all all 127.0.0.1/32 trust
    host all all ::1/128 trust
    
    # Cluster internal connections
    hostssl all all 10.0.0.0/8 trust
    hostssl replication all 10.0.0.0/8 trust
    EOF
    
    echo "Node initialization completed for $NODE_NAME"

  start-node.sh: |
    #!/bin/bash
    set -e

    NODE_NAME=$(hostname)
    export MONITOR_URI="postgres://autoctl_node@postgres-monitor.db.svc.cluster.local:6001/pg_auto_failover"

    case $NODE_NAME in
      *-0)
        export PGDATA=/var/lib/postgresql/pgdata/master
        ;;
      *-1)
        export PGDATA=/var/lib/postgresql/pgdata/syncreplica
        ;;
      *-2)
        export PGDATA=/var/lib/postgresql/pgdata/asyncreplica
        ;;
      *-3)
        export PGDATA=/var/lib/postgresql/pgdata/asyncreplica
        ;;
      *)
        export PGDATA=/var/lib/postgresql/pgdata/replica
        ;;
    esac

    export PGUSER=postgres
    export PATH="/usr/lib/postgresql/11/bin:/usr/local/bin:$PATH"

    # Create a shutdown handler
    shutdown_handler() {
      echo "Received shutdown signal, stopping pg_autoctl gracefully..."
      pg_autoctl stop --pgdata "$PGDATA" --fast
      exit 0
    }

    # Trap shutdown signals
    trap 'shutdown_handler' SIGTERM SIGINT


    echo "Starting pg_autoctl for $NODE_NAME"
    echo "PGDATA: $PGDATA"
    echo "Monitor URI: $MONITOR_URI"

    # Start pg_autoctl with enhanced logging
    exec pg_autoctl run --pgdata "$PGDATA"