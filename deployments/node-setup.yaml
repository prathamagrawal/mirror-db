apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-nodes
  namespace: db
  labels:
    app: postgres-nodes
    role: data
spec:
  serviceName: postgres-nodes
  replicas: 4 # 1 master + 1 sync replica + 2 async replicas
  selector:
    matchLabels:
      app: postgres-nodes
  template:
    metadata:
      labels:
        app: postgres-nodes
        role: data
    spec:
      securityContext:
        fsGroup: 101
        runAsUser: 101
        runAsGroup: 101
      initContainers:
      - name: pg-auto-failover-init
        image: citusdata/pg_auto_failover:latest
        command: ["/bin/bash", "/etc/scripts/init-node.sh"]
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        env:
        - name: PGDATA
          value: /var/lib/postgresql/pgdata
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql
        - name: postgres-node-config
          mountPath: /etc/config
          readOnly: true
        - name: postgres-secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: pg-auto-failover-config
          mountPath: /etc/scripts
          readOnly: true
        - name: shared-config
          mountPath: /shared
      containers:
      - name: postgres
        image: citusdata/pg_auto_failover:latest
        env:
        - name: PGDATA
          value: /var/lib/postgresql/pgdata
        - name: PG_AUTOCTL_MONITOR
          value: postgres://autoctl_node@postgres-monitor.db.svc.cluster.local:5432/pg_auto_failover
        command: ["/bin/bash", "/etc/scripts/start-node.sh"]
        securityContext:
          runAsGroup: 101
          runAsUser: 101
        ports:
        - containerPort: 6002
          name: postgres-0
        - containerPort: 6003
          name: postgres-1
        - containerPort: 6004
          name: postgres-2
        - containerPort: 6005
          name: postgres-3
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql
        - name: postgres-node-config
          mountPath: /etc/config
          readOnly: true
        - name: postgres-secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: pg-auto-failover-config
          mountPath: /etc/pg-auto-failover
          readOnly: true
        - name: pg-auto-failover-config
          mountPath: /etc/scripts
          readOnly: true
        - name: shared-config
          mountPath: /shared
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        # Readiness Probe - checks if ready to accept connections
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              NODE_NAME=$(hostname)
              case $NODE_NAME in
                *-0) PGPORT=6002 ;;
                *-1) PGPORT=6003 ;;
                *-2) PGPORT=6004 ;;
                *-3) PGPORT=6005 ;;
                *) PGPORT=6006 ;;
              esac
              export PATH="/usr/lib/postgresql/11/bin:/usr/local/bin:$PATH"
              # Check if postgres is ready and pg_auto_failover is functioning
              pg_isready -h localhost -p $PGPORT -U postgres
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 15
          successThreshold: 1
          failureThreshold: 5
        # Liveness Probe - checks if container should be restarted
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              NODE_NAME=$(hostname)
              case $NODE_NAME in
                *-0) PGPORT=6002; PGDATA="/var/lib/postgresql/pgdata/master" ;;
                *-1) PGPORT=6003; PGDATA="/var/lib/postgresql/pgdata/syncreplica" ;;
                *-2) PGPORT=6004; PGDATA="/var/lib/postgresql/pgdata/asyncreplica" ;;
                *-3) PGPORT=6005; PGDATA="/var/lib/postgresql/pgdata/asyncreplica2" ;;
                *) PGPORT=6006; PGDATA="/var/lib/postgresql/pgdata/replica" ;;
              esac
              export PATH="/usr/lib/postgresql/11/bin:/usr/local/bin:$PATH"
              # Check postgres connectivity and basic query execution
              pg_isready -h localhost -p $PGPORT -U postgres && \
              psql -h localhost -p $PGPORT -U postgres -d postgres -c 'SELECT 1;' > /dev/null 2>&1 && \
              # Verify pg_auto_failover process is running
              pgrep -f "pg_autoctl run" > /dev/null
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 20
          successThreshold: 1
          failureThreshold: 5
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/bash
              - -c
              - |
                # Graceful shutdown of pg_auto_failover
                NODE_NAME=$(hostname)
                case $NODE_NAME in
                  *-0) PGDATA="/var/lib/postgresql/pgdata/master" ;;
                  *-1) PGDATA="/var/lib/postgresql/pgdata/syncreplica" ;;
                  *-2) PGDATA="/var/lib/postgresql/pgdata/asyncreplica" ;;
                  *-3) PGDATA="/var/lib/postgresql/pgdata/asyncreplica2" ;;
                  *) PGDATA="/var/lib/postgresql/pgdata/replica" ;;
                esac
                pg_autoctl stop --pgdata $PGDATA
      volumes:
      - name: postgres-node-config
        configMap:
          name: postgres-node-config
      - name: postgres-secrets
        secret:
          secretName: postgres-creds
      - name: pg-auto-failover-config
        configMap:
          name: pg-auto-failover-config
          defaultMode: 0755
      - name: shared-config
        emptyDir: {}
      restartPolicy: Always
      serviceAccountName: postgres-service-account
  volumeClaimTemplates:
  - metadata:
      name: postgres-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 50Gi
      storageClassName: standard